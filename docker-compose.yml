version: '3'

services:
  redis:
    image: "redis:alpine"

  web:
    build: ./web
    command: bash -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    links:
      - redis
    volumes:
      - ./web:/perfserv/code/
    ports:
      - 8000:8000
    depends_on:
      - redis

  celery:
    build:
      context: ./web
      dockerfile: CeleryDockerfile
    command: bash -c "chown -R perfserv:perfserv /home/perfserv && su perfserv && celery -A perfproject worker -l info"
    links:
      - redis
    volumes:
      - ./web:/home/perfserv/code
      - uploads:/home/perfserv/uploads
    depends_on:
      - redis

  celery-beat:
    build:
      context: ./web
      dockerfile: CeleryDockerfile
    command: bash -c "chown -R perfserv:perfserv /home/perfserv && su perfserv && celery -A perfproject beat -l info"
    links:
      - redis
    volumes:
      - ./web:/home/perfserv/code
      - uploads:/home/perfserv/uploads
    depends_on:
      - redis

volumes:
  uploads:

  nginx:
    restart: unless-stopped
    build: ./nginx/
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./web/perfapp/static/:/static
    links:
      - web:web
